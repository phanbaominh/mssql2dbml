const { keyword, word } = require('./base_utils');

exports.KeywordIdentity = keyword(/IDENTITY/i);
exports.KeywordIndex = keyword(/INDEX/i);
exports.KeywordWith = keyword(/WITH/i);
exports.KeywordOn = keyword(/ON/i);
exports.KeywordOff = keyword(/OFF/i);
exports.KeywordFilestream_On = keyword(/FILESTREAM_ON/i);
exports.KeywordPrimaryKey = keyword(/PRIMARY[^\S\r\n]+KEY/i);
exports.KeywordClustered = keyword(/CLUSTERED/i);
exports.KeywordNonclustered = keyword(/NONCLUSTERED/i);
exports.KeywordColumnStore = keyword(/COLUMNSTORE/i);
exports.KeywordReferences = keyword(/REFERENCES/i);
exports.KeywordForeignKey = keyword(/FOREIGN[^\S\r\n]+KEY/i);
exports.KeywordCheck = keyword(/CHECK/i);
exports.KeywordConstraint = keyword(/CONSTRAINT/i);
exports.KeywordUnique = keyword(/UNIQUE/i);
exports.KeywordHash = keyword(/HASH/i);
exports.KeywordBucket_Count = keyword(/BUCKET_COUNT/i);
exports.KeywordNFR = keyword(/NOT[^\S\r\n]+FOR[^\S\r\n]+REPLICATION/);
exports.KeywordOnDelete = keyword(/ON[^\S\r\n]+DELETE/i);
exports.KeywordOnUpdate = keyword(/ON[^\S\r\n]+UPDATE/i);
exports.KeywordSetNull = keyword(/SET[^\S\r\n]+NULL/i);
exports.KeywordSetDefault = keyword(/SET[^\S\r\n]+DEFAULT/i);
exports.KeywordNoAction = keyword(/NO[^\S\r\n]+ACTION/i);
exports.KeywordCascade = keyword(/CASCADE/i);
exports.KeywordContent = keyword(/CONTENT/i);
exports.KeywordDocument = keyword(/DOCUMENT/i);
exports.KeywordNull = keyword(/NULL/i);
exports.KeywordNotNull = keyword(/NOT[^\S\r\n]+NULL/i);
exports.KeywordDefault = keyword(/DEFAULT/i);
exports.KeywordFilestream = keyword(/FILESTREAM/i);
exports.KeywordCollate = keyword(/COLLATE/i);
exports.KeywordSparse = keyword(/SPARSE/i);
exports.KeywordRowGUIDCol = keyword(/ROWGUIDCOL/i);
exports.KeywordMasked = keyword(/MASKED/i);
exports.KeywordEncrypted = keyword(/ENCRYPTED/i);
exports.KeywordFunction = keyword(/FUNCTION/i);
exports.KeywordGeneratedAAR = keyword(/GENERATED ALWAYS AS ROW/i);
exports.KeywordStart = keyword(/START/i);
exports.KeywordEnd = keyword(/END/i);
exports.KeywordHidden = keyword(/HIDDEN/i);
exports.KeywordAsc = keyword(/ASC/i);
exports.KeywordDesc = keyword(/DESC/i);
exports.KeywordTextImage_On = keyword(/TEXTIMAGE_ON/i);
exports.KeywordPeriodForST = keyword(/PERIOD[^\S\r\n]+FOR[^\S\r\n]+SYSTEM_TIME/i);
exports.KeywordFileTable = keyword(/FILETABLE/i);
exports.KeywordTable = keyword(/TABLE/i);
exports.KeywordCreate = keyword(/CREATE/i);
exports.KeywordAs = keyword(/AS/i);
exports.KeywordPersisted = keyword(/PERSISTED/i);
exports.KeywordColumnSet = keyword(/XML[^\S\r\n]+COLUMN_SET[^\S\r\n]+FOR[^\S\r\n]+ALL_SPARSE_COLUMNS/i);
exports.KeywordInclude = keyword(/INCLUDE/i);
exports.KeywordIn = keyword(/IN/i);
exports.KeywordWhere = keyword(/WHERE/i);
exports.KeywordFor = keyword(/FOR/i);
exports.KeywordWithValues = keyword(/WITH[^\S\r\n]+VALUES/i);
exports.KeywordConnection = keyword(/CONNECTION/i);
exports.KeywordTo = keyword(/TO/i);
exports.KeywordAlter = keyword(/ALTER/i);
exports.KeywordAdd = keyword(/ADD/i);

exports.LogicalOpIn = keyword(/IN/i, true);
exports.LogicalOpAnd = keyword(/AND/i, true);


exports.LessThan = word('<');
exports.GreaterThan = word('>');
exports.LParen = word('(');
exports.Comma = word(',');
exports.RParen = word(')');
exports.DoubleQuote = word('"');
exports.LBracket = word('[');
exports.RBracket = word(']');
exports.Equal = word('=');
